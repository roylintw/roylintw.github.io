<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>標籤 on 小書僮</title>
    <link>https://roylintw.github.io/tags/%E6%A8%99%E7%B1%A4/</link>
    <description>Recent content in 標籤 on 小書僮</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Thu, 08 May 2025 22:44:00 +0800</lastBuildDate><atom:link href="https://roylintw.github.io/tags/%E6%A8%99%E7%B1%A4/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>log4j2 標籤 介紹</title>
      <link>https://roylintw.github.io/blog/logging/log4j2/</link>
      <pubDate>Thu, 08 May 2025 22:44:00 +0800</pubDate>
      
      <guid>https://roylintw.github.io/blog/logging/log4j2/</guid>
      <description>   標籤名稱 說明 常用屬性     &amp;lt;Configuration&amp;gt; Log4j2 的根標籤，用來包住整個設定 status（設定 log4j2 自己的 log level）monitorInterval（熱重載）   &amp;lt;Properties&amp;gt; 定義變數，用來重複使用或抽出路徑等 無（內含 &amp;lt;Property name=&amp;quot;&amp;quot;&amp;gt;）   &amp;lt;Property&amp;gt; 宣告單一變數 name（變數名稱）   &amp;lt;Appenders&amp;gt; 定義所有輸出管道（log 要輸出去哪） 無   &amp;lt;Console&amp;gt; 將 log 輸出到主控台（stdout） name、target（SYSTEM_OUT 或 SYSTEM_ERR）   &amp;lt;File&amp;gt; 輸出 log 到一個固定檔案 name、fileName   &amp;lt;RollingFile&amp;gt; 輸出 log 到可輪替檔案（可設最大大小與備份） fileName、filePattern   &amp;lt;RollingRandomAccessFile&amp;gt; 高效能版本的 RollingFile，支援隨機存取 name、fileName、filePattern   &amp;lt;Policies&amp;gt; 定義輪替規則 無（需內含 &amp;lt;TimeBasedTriggeringPolicy&amp;gt; 等）   &amp;lt;TimeBasedTriggeringPolicy&amp;gt; 按時間進行 log 輪替 interval（間隔秒、分鐘、天等）modulate（對齊時間）   &amp;lt;SizeBasedTriggeringPolicy&amp;gt; 按大小進行 log 輪替 size（如 &amp;quot;10MB&amp;quot;）   &amp;lt;DefaultRolloverStrategy&amp;gt; 設定備份檔案保留數量等 max（最多保留幾份備份）   &amp;lt;PatternLayout&amp;gt; 控制 log 的輸出格式 pattern（格式範本）   &amp;lt;Loggers&amp;gt; 包含所有 logger 的定義 無   &amp;lt;Logger&amp;gt; 定義特定 package/class 的 logger name、level、additivity   &amp;lt;AsyncLogger&amp;gt; 非同步 logger，效能更好 同 &amp;lt;Logger&amp;gt;   &amp;lt;Root&amp;gt; 預設（最上層）logger level   &amp;lt;AsyncRoot&amp;gt; 非同步 root logger 同 &amp;lt;Root&amp;gt;   &amp;lt;AppenderRef&amp;gt; 指定 logger 要用哪些 appender ref（對應 appender 的 name）   &amp;lt;Filters&amp;gt; 為 logger 或 appender 設定過濾條件 無（內含 &amp;lt;ThresholdFilter&amp;gt; 等）   &amp;lt;ThresholdFilter&amp;gt; 過濾某個等級以下的 log，不處理 level（如 info）onMatch / onMismatch    📚參考文章  ChatGPT  </description>
    </item>
    
  </channel>
</rss>
