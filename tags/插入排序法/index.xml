<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>插入排序法 on 小書僮</title>
    <link>https://roylintw.github.io/tags/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E6%B3%95/</link>
    <description>Recent content in 插入排序法 on 小書僮</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Fri, 18 Apr 2025 16:12:35 +0800</lastBuildDate><atom:link href="https://roylintw.github.io/tags/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>🔢 排序演算法 - 插入排序法</title>
      <link>https://roylintw.github.io/blog/algorithms/insertionsort/</link>
      <pubDate>Fri, 18 Apr 2025 16:12:35 +0800</pubDate>
      
      <guid>https://roylintw.github.io/blog/algorithms/insertionsort/</guid>
      <description>📌定義： 核心思想類似於人們整理撲克牌時的方式：從第二張牌開始，每次從未排序的資料中取出一個元素，插入到前面已排序的資料中的正確位置，直到所有資料都排好序。
🧠原理：  從第二個元素開始，視為當前要插入的元素 與前面已排序的元素比較，找到合適位置 插入該元素，其他元素向後移動一格 重複上述步驟直到最後一個元素  ⏱️ 時間複雜度：    情況 比較次數 時間複雜度     最佳情況（已排序） O(n) O(n)   最差情況（反序） O(n²) O(n²)   平均情況 O(n²) O(n²)    ✅ 優點：  實作簡單 穩定排序(不改變相同元素的順序) 適合小型陣列或幾乎已經排序好的資料  ❌ 缺點：  效率不高，對於大型資料集不適合  💡 適合用在哪？  適合處理 10~100 筆以內的小資料集，比如：使用者手動輸入的幾筆資料要即時排序</description>
    </item>
    
  </channel>
</rss>
